type Mutation {
	# Create a tweet for a user
	createUserTweet(handle: String!, tweet: String!): User
	# Delete User Tweet
	deleteUserTweet(id: String!, handle: String): User
}

type Query {
	getUserTwitterFeed(handle: String!): User
	getUserTweetByKeyword(keyword: String!): User
}

type Subscription {
	subscribeToTweeterUser(handle: String!): User
		@aws_subscribe(mutations: ["createUserTweet","deleteUserTweet"])
}

type Tweet {
	tweet_id: String!
	tweet: String!
	retweeted: Boolean!
	retweet_count: Int
	favorited: Boolean!
}

type TweetConnection {
	items: [Tweet]
	nextToken: String
}

type User {
	name: String!
	handle: String!
	location: String!
	description: String!
	followers_count: Int!
	friends_count: Int!
	favourites_count: Int!
	followers: [String]
	topTweet: Tweet
	tweets(limit: Int, nextToken: String, keyword: String): TweetConnection
}

schema {
	query: Query
	mutation: Mutation
	subscription: Subscription
}