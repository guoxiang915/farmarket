type Mutation {
	# Create a tweet for a user
	# consumer keys and tokens are not required for dynamo integration
	createTweet(
		handle: String!,
		tweet: String!,
		consumer_key: String,
		consumer_secret: String,
		access_token_key: String,
		access_token_secret: String
	): Tweet!

	# Delete User Tweet
	deleteTweet(tweet_id: String!, handle: String!): Tweet!

	# Retweet existing Tweet
	reTweet(tweet_id: String!, handle: String!): Tweet!

	# Update existing Tweet
	updateTweet(tweet_id: String!, handle: String!, tweet: String!): Tweet!
}

type Query {
	getUserTwitterFeed(handle: String!, consumer_key: String, consumer_secret: String): User!

	# search functionality is available in elasticsearch integration
	searchTwitterFeedByKeyword(handle: String!, keyword: String!): User!
	searchTwitterFeedByLocation(handle: String!, location: String!): User!
	searchAllTweetsByKeyword(keyword: String!): [User!]!
}

type Subscription {
	subscribeToTweeterUser(handle: String!): Tweet
		@aws_subscribe(mutations: ["createTweet", "deleteTweet", "reTweet", "updateTweet"])
}

type Tweet {
	tweet_id: String!
	tweet: String!
	retweeted: Boolean
	retweet_count: Int
	favorited: Boolean
}

type TweetConnection {
	items: [Tweet!]!
	nextToken: String
}

type User {
	name: String!
	handle: String!
	location: String!
	description: String!
	followers_count: Int!
	friends_count: Int!
	favourites_count: Int!
	followers: [String!]!
	topTweet: Tweet
	tweets(limit: Int!, nextToken: String!): TweetConnection
}

schema {
	query: Query
	mutation: Mutation
	subscription: Subscription
}